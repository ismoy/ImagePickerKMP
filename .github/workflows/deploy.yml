name: Deploy to Maven Central

on:
  workflow_dispatch:
    # Permite ejecución manual desde la UI de GitHub Actions
  # push:
  #   branches: [ main ]
  # workflow_run:
  #   workflows: ["Version Bump"]
  #   types:
  #     - completed

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Get version from build.gradle.kts
        id: version
        run: |
          VERSION=$(grep 'version = ' library/build.gradle.kts | sed 's/.*version = "\(.*\)".*/\1/')
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "tag=v$VERSION" >> $GITHUB_OUTPUT

      - name: Setup GPG
        run: |
          echo "${{ secrets.SIGNING_SECRET_KEY_RING_FILE }}" | base64 -d > secring.gpg
          echo "signing.keyId=${{ secrets.SIGNING_KEY_ID }}" >> gradle.properties
          echo "signing.password=${{ secrets.SIGNING_PASSWORD }}" >> gradle.properties
          echo "signing.secretKeyRingFile=secring.gpg" >> gradle.properties

      - name: Setup Maven Central credentials
        run: |
          echo "mavenCentralUsername=${{ secrets.MAVEN_CENTRAL_USERNAME }}" >> gradle.properties
          echo "mavenCentralPassword=${{ secrets.MAVEN_CENTRAL_PASSWORD }}" >> gradle.properties

      - name: Build and test
        run: ./gradlew build test --no-daemon

      - name: Generate coverage report
        run: ./gradlew jacocoTestReport --no-daemon

      - name: Publish to Maven Central
        run: ./gradlew publishToMavenCentral --no-daemon

      - name: Create Git tag
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag ${{ steps.version.outputs.tag }}
          git push origin ${{ steps.version.outputs.tag }}

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.tag }}
          release_name: Release ${{ steps.version.outputs.tag }}
          body: |
            ## 🚀 Release ${{ steps.version.outputs.tag }}
            
            ### What's New
            - 🎉 New release of ImagePickerKMP
            - 📦 Published to Maven Central
            - ✅ All tests passing
            - 📊 Code coverage included
            
            ### Installation
            ```kotlin
            dependencies {
                implementation("io.github.ismoy:imagepickerkmp:${{ steps.version.outputs.version }}")
            }
            ```
            
            ### Documentation
            - [Integration Guide](https://github.com/ismoy/ImagePickerKMP/blob/main/INTEGRATION_GUIDE.md)
            - [Examples](https://github.com/ismoy/ImagePickerKMP/blob/main/EXAMPLES.md)
            - [API Reference](https://github.com/ismoy/ImagePickerKMP/blob/main/API_REFERENCE.md)
            
            ### Changes
            See [CHANGELOG.md](https://github.com/ismoy/ImagePickerKMP/blob/main/CHANGELOG.md) for detailed changes.
            
            ---
            *This release was automatically generated by GitHub Actions*
          draft: false
          prerelease: false

      - name: Notify Discord on Deploy Success
        if: success()
        uses: Ilshidur/action-discord@master
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}
        with:
          args: |
            🚀 **Deploy Success** - ImagePickerKMP
            
            **Version:** ${{ steps.version.outputs.tag }}
            **Repository:** ${{ github.repository }}
            **Commit:** ${{ github.sha }}
            **Author:** ${{ github.actor }}
            
            📦 **Published to Maven Central**
            🏷️ **GitHub Release Created**
            
            🔗 **View Release:** ${{ github.server_url }}/${{ github.repository }}/releases/tag/${{ steps.version.outputs.tag }}

      - name: Notify Discord on Deploy Failure
        if: failure()
        uses: Ilshidur/action-discord@master
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}
        with:
          args: |
            ❌ **Deploy Failed** - ImagePickerKMP
            
            **Version:** ${{ steps.version.outputs.tag }}
            **Repository:** ${{ github.repository }}
            **Commit:** ${{ github.sha }}
            **Author:** ${{ github.actor }}
            
            🔗 **View Details:** ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }} 